h1{font-weight:300;font-size:2.2em}header .col1{width:50px;margin-right:1em;padding:0}@media screen and (max-width:49.9375em){header .col1{position:relative;left:50px}}header .user-name,header h1{color:#fff}header .user-name{text-transform:none;font-size:1.3em;font-weight:600}.panel{margin-bottom:4em}.summary{margin-bottom:2em;padding-top:2em}.summary:after,.summary:before{content:" ";display:table}.summary:after{clear:both}.summary ul.stats{margin-top:0;margin-bottom:0;padding-left:0;list-style-type:none;font-style:normal;width:100%;margin-left:-1.5%}.summary ul.stats:after,.summary ul.stats:before{content:" ";display:table}.summary ul.stats:after{clear:both}.summary ul.stats li{list-style-type:none;font-style:normal;box-sizing:border-box;display:inline;float:left;width:33.3333333333%;padding-right:1.5%;padding-left:1.5%;margin-bottom:2em}.summary ul.stats li:before{opacity:.2;font-size:6em;float:left}@media screen and (max-width:74.9375em){.summary ul.stats li:before{font-size:5em}}@media screen and (max-width:56.1875em){.summary ul.stats li:before{font-size:4.5em}}@media screen and (max-width:49.9375em){.summary ul.stats li:before{font-size:4em}}.summary ul.stats a{position:relative;display:block;width:100%;height:100%}.summary ul.stats span{font-family:Roboto Slab,Georgia,serif;display:block;font-size:4em;line-height:1em;font-weight:300}@media screen and (max-width:74.9375em){.summary ul.stats span{font-size:3em}}@media screen and (max-width:56.1875em){.summary ul.stats span{font-size:2.5em}}@media screen and (max-width:49.9375em){.summary ul.stats span{font-size:2em}}.summary .search-bar{border-top:1px solid #e6e6e6;padding:1em 0 0}.summary .search-bar:after,.summary .search-bar:before{content:" ";display:table}.summary .search-bar:after{clear:both}.summary .search-bar h2{display:inline-block;margin-right:1em}.summary .search-bar .fields{display:inline-block;clear:none}.summary .search-bar .field,.summary .search-bar label{display:inline-block}.summary .search-bar input{background-color:#fff}.object.collapsible .object-layout .title-wrapper:before{display:none}.object-layout{display:flex;flex-flow:row-reverse wrap}.object-layout .listing--push-top{margin-top:3em}.object-layout .listing--push-top thead{display:table-row-group;margin-bottom:0}.object-layout .listing{margin-bottom:0}.object-layout .listing tbody{border-bottom:0}.task .icon{margin-left:-1.75em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
